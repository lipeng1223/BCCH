/*
 * BreakClientLogin.java
 *
 * Created on September 10, 2005, 11:09 AM
 */

package com.bc.breakclient;

import java.awt.Color;

import org.apache.log4j.Logger;

import com.bc.dao.BreakClientDao;
import com.bc.orm.User;

/**
 *
 * @author  megela
 */
public class BreakClientLogin extends javax.swing.JFrame {

    private String host = null;

    /** Creates new form BreakClientLogin */
    public BreakClientLogin() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        errorMessage = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Username:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel3.setText("Enter Your Username And Password");

        loginButton.setFont(new java.awt.Font("Arial", 0, 11));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        errorMessage.setFont(new java.awt.Font("Arial", 0, 11));
        errorMessage.setText(" ");

        username.setFont(new java.awt.Font("Arial", 0, 11));

        password.setFont(new java.awt.Font("Arial", 0, 11));
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(username, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .add(loginButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(52, 52, 52)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(errorMessage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(16, 16, 16)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(errorMessage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(username, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(loginButton))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel2)
                        .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-331)/2, (screenSize.height-197)/2, 331, 197);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        loginButtonActionPerformed(evt);
    }//GEN-LAST:event_passwordActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        loginButton.setEnabled(false);
        username.setEnabled(false);
        password.setEnabled(false);
        errorMessage.setForeground(Color.blue);
        errorMessage.setText("Logging in...");
        LoginThread lt = new LoginThread();
        lt.start();
    }//GEN-LAST:event_loginButtonActionPerformed


    private class LoginThread extends Thread {

        public void run(){
            try {
                System.out.println("in loginthread...");
                if (host != null){
                    //SessionUtil.getConfiguration().setProperty("hibernate.connection.url", "jdbc:mysql://"+host+"/bookcountry");
                    //System.out.println("Set configuration connect url to: "+"jdbc:mysql://"+host+"/bookcountry");
                }
                System.out.println("Going after dao...");
                System.out.println(System.getProperty("server.host"));
                BreakClientDao dao = new BreakClientDao();
                User user = dao.findByUsernamePassword(username.getText(),
                    new String(password.getPassword()));
                if (user == null){
                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("Username / Password not found.");
                    password.setText("");
                    username.setText("");
                    username.setEnabled(true);
                    password.setEnabled(true);
                    username.requestFocusInWindow();
                    loginButton.setEnabled(true);
                } else {
                    dispose();
                    BreakClientGui bcg = new BreakClientGui();
                    bcg.setUser(user);
                    bcg.setupGui();
                    bcg.setVisible(true);
                    bcg.setFocus();
                }
            } catch (Throwable t){
                loginButton.setEnabled(true);
                username.setEnabled(true);
                password.setEnabled(true);
                errorMessage.setForeground(Color.red);
                errorMessage.setText("Could not log into the system!");
                // now try and get this somewhere for later viewing
                Logger log = Logger.getLogger(BreakClientLogin.class);
                log.error("Caught Throwable", t);
                System.out.println("Logged errors to C:\\BreakClientErrors.log");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BreakClientLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
