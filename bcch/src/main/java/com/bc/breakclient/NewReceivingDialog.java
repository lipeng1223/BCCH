/*
 * NewReceivingDialog.java
 *
 * Created on September 10, 2005, 11:16 AM
 */

package com.bc.breakclient;

import java.util.Calendar;
import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

import com.bc.dao.BreakClientDao;
import com.bc.orm.BreakReceived;
import com.bc.orm.BreakReceivedItem;
import com.bc.orm.InventoryItem;
import com.bc.orm.Received;
import com.bc.orm.Vendor;
import com.bc.util.DateFormat;

/**
 *
 * @author  megela
 */
public class NewReceivingDialog extends javax.swing.JDialog {

    private BreakClientGui clientGui;
    private List<Vendor> vendorList = null;
    private static final String UNKNOWN = "<< Unknown >>";

    /** Creates new form NewReceivingDialog */
    public NewReceivingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        BreakClientDao dao = new BreakClientDao();
        vendorList = dao.findAllVendors();
        initComponents();
        clientGui = (BreakClientGui)parent;
        String date = DateFormat.format(Calendar.getInstance().getTime());
        poDate.setText(date);
        vendors.addItem(UNKNOWN);
        for (Vendor vendor : vendorList){
            vendors.addItem(vendor.getCodePlusName());
        }

        ButtonGroup bg = new ButtonGroup();
        bg.add(threeMbRadio);
        bg.add(bookcountryRadio);

        conditionGroup.add(hurtRadio);
        conditionGroup.add(overstockRadio);
        conditionGroup.add(unjacketedRadio);

        vendors.setSelectedIndex(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conditionGroup = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        poNumber = new javax.swing.JTextField();
        poDate = new javax.swing.JTextField();
        vendors = new javax.swing.JComboBox();
        comment = new javax.swing.JTextArea();
        createReceiving = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        skidbarcode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateError = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bookcountryRadio = new javax.swing.JRadioButton();
        threeMbRadio = new javax.swing.JRadioButton();
        hurtRadio = new javax.swing.JRadioButton();
        unjacketedRadio = new javax.swing.JRadioButton();
        overstockRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Receiving");
        setModal(true);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("PO Number:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("PO Date:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Vendor:");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Comment:");

        poNumber.setFont(new java.awt.Font("Arial", 0, 11));

        poDate.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        vendors.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        comment.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        createReceiving.setFont(new java.awt.Font("Arial", 0, 11));
        createReceiving.setText("Create Receiving");
        createReceiving.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createReceivingActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        skidbarcode.setFont(new java.awt.Font("Arial", 0, 11));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel1.setText("Skid Barcode:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel2.setText("OR");

        dateError.setFont(new java.awt.Font("Arial", 0, 11));
        dateError.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel3.setText("Owner:");

        bookcountryRadio.setFont(new java.awt.Font("Arial", 0, 11));
        bookcountryRadio.setSelected(true);
        bookcountryRadio.setText("Bookcountry");
        bookcountryRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        bookcountryRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        threeMbRadio.setFont(new java.awt.Font("Arial", 0, 11));
        threeMbRadio.setText("3MB");
        threeMbRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        threeMbRadio.setEnabled(false);
        threeMbRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        hurtRadio.setFont(new java.awt.Font("Arial", 0, 11));
        hurtRadio.setSelected(true);
        hurtRadio.setText("hurt");
        hurtRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        hurtRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        unjacketedRadio.setFont(new java.awt.Font("Arial", 0, 11));
        unjacketedRadio.setText("unjacketed");
        unjacketedRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        unjacketedRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        overstockRadio.setFont(new java.awt.Font("Arial", 0, 11));
        overstockRadio.setText("overstock");
        overstockRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        overstockRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(jLabel3)
                                    .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(poNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(poDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(bookcountryRadio)
                                        .add(4, 4, 4)
                                        .add(threeMbRadio)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(dateError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 216, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .add(jLabel2)
                                    .add(jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(vendors, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 250, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(18, 18, 18)
                                        .add(comment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                    .add(layout.createSequentialGroup()
                        .add(56, 56, 56)
                        .add(createReceiving, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(26, 26, 26)
                        .add(cancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(hurtRadio)
                                .add(8, 8, 8)
                                .add(unjacketedRadio)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(overstockRadio))
                            .add(skidbarcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dateError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(bookcountryRadio)
                    .add(threeMbRadio))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(poNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(poDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(vendors, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 53, Short.MAX_VALUE)
                        .add(jLabel2))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(comment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(skidbarcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hurtRadio)
                    .add(unjacketedRadio)
                    .add(overstockRadio))
                .add(11, 11, 11)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(createReceiving)
                    .add(cancel))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-351)/2, (screenSize.height-353)/2, 351, 353);
    }// </editor-fold>//GEN-END:initComponents

    private void createReceivingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createReceivingActionPerformed
        BreakReceived br = new BreakReceived();
        if (poDate.getText().length() != 10){
            dateError.setText("Must Be MM/DD/YYYY");
            return;
        }
        try {
            br.setPoDate(DateFormat.parse(poDate.getText()));
            br.setDate(Calendar.getInstance().getTime());
        } catch (Exception e){
            dateError.setText("Must Be MM/DD/YYYY");
            return;
        }
        if (br.getPoDate() == null || br.getPoDate().getTime() == 0){
            br.setPoDate(Calendar.getInstance().getTime());
        }
        br.setComment(comment.getText());
        br.setPoNumber(poNumber.getText());
        br.setSkid(false);
        int index = vendors.getSelectedIndex();
        if (index == 0){
            br.setVendorCode(UNKNOWN);
        } else {
            Vendor vendor = vendorList.get(index-1);
            br.setVendor(vendor);
            br.setVendorCode(vendor.getCode());
        }
        BreakClientDao dao = new BreakClientDao();
        if (skidbarcode.getText() != null && skidbarcode.getText().length() > 0){
            // check to see if this skid actually exists
            String isbn = skidbarcode.getText();
            String cond = "hurt";
            if (unjacketedRadio.isSelected()){
                cond = "unjacketed";
            } else if (overstockRadio.isSelected()){
                cond = "overstock";
            }
            Received rec = dao.findOldestReceivedWithOpen(isbn, cond);
            if (rec != null){
                br.setComment(rec.getComment());
                br.setPoDate(rec.getPoDate());
                br.setPoNumber(rec.getPoNumber());
                br.setVendorCode(rec.getVendorCode());
                br.setVendor(rec.getVendor());
                br.setSkidbarcode(isbn);
                br.setSkidCondition(cond);
                br.setSkid(true);
            }
            InventoryItem ii = dao.findByIsbnCond(isbn, cond);
            boolean isSkid = false;
            if (ii != null){
                isSkid = ii.getSkid();
                br.setSkidpiececount(ii.getSkidPieceCount());
            } else {
                // check bri
                BreakReceivedItem bri = dao.findItemByIsbn(isbn);
                if (bri != null){
                    isSkid = bri.getSkid();
                    br.setSkidpiececount(bri.getPieceCount());
                }
            }
            if (!isSkid){
                // error back
                JOptionPane.showMessageDialog(this, "The Skid Barcode is not a skid in inventory.",
                    "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            br.setSkid(true);
        }
        clientGui.addReceiving(br);
        dispose();
    }//GEN-LAST:event_createReceivingActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewReceivingDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bookcountryRadio;
    private javax.swing.JButton cancel;
    private javax.swing.JTextArea comment;
    private javax.swing.ButtonGroup conditionGroup;
    private javax.swing.JButton createReceiving;
    private javax.swing.JLabel dateError;
    private javax.swing.JRadioButton hurtRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton overstockRadio;
    private javax.swing.JTextField poDate;
    private javax.swing.JTextField poNumber;
    private javax.swing.JTextField skidbarcode;
    private javax.swing.JRadioButton threeMbRadio;
    private javax.swing.JRadioButton unjacketedRadio;
    private javax.swing.JComboBox vendors;
    // End of variables declaration//GEN-END:variables

}
