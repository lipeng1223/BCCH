    Ext.QuickTips.init();
    
    var tb = new Ext.Toolbar({
        height:30
        //style: 'background:transparent;border-color:transparent'
        //style: 'background:#F0F4F5 url(/images/tbbg2.png) repeat-x scroll left top'
    });
    //tb.render('toolbarmenu');
    tb.on("render", function(){
    tb.addSpacer();
    tb.addElement('bellinvtext');
    tb.addSpacer();
    tb.addSpacer();
    tb.addSpacer();
    tb.addSpacer();
    tb.addSpacer();
    tb.addSpacer();
    tb.addSpacer();
    tb.addSeparator();
    var mainHomeMenu = new Ext.menu.Menu({
        id: 'mainHomeMenu',
        items: [
            {
                text: 'Home Page',
                id: 'homePageMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainHomeMenu.hide();
                    interPageMove('/secure/bellwether/home.bc');
                }
            }, '-',
            {
                text: 'Back To Main Screen',
                id: 'mainPageMenuItem',
                icon: '/images/arrow_left.png',
                handler: function(){
                    mainHomeMenu.hide();
                    interPageMove('/secure/home.bc');
                }
            }
        ]
    });
    tb.add({
        text:'Home',
        <s:if test="#activeMenu == 'home'">cls: 'activeMenu',</s:if>
        menu: mainHomeMenu
    });
    <s:if test="isBellInventoryAdmin || isBellInventoryViewer">
    tb.addSeparator();
    var mainInvMenu = new Ext.menu.Menu({
        id: 'mainInvMenu',
        items: [
            {
                text: 'Inventory List By ISBN',
                id: 'inventoryListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainInvMenu.hide();
                    interPageMove('/secure/bellwether/inventory!list.bc');
                }
            },
            {
                text: 'Inventory List By SKU',
                id: 'inventoryListSkuMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainInvMenu.hide();
                    interPageMove('/secure/bellwether/inventory!listsku.bc');
                }
            },
            {
                text: 'Inventory Search',
                id: 'inventorySearchMenuItem',
                icon: '/images/zoom.png',
                handler: function(){
                    Ext.Updater.defaults.loadScripts = true;
                    if (Ext.getCmp("invsearchwindow") == undefined){
                        Ext.invSearchWindow = new Ext.Window({
                            id: 'invsearchwindow',
                            title: 'Inventory Search',
                            width:650,
                            height:200,
                            minWidth:650,
                            minHeight:200,
                            modal:false,
                            stateful:false,
                            autoScroll:true,
                            bbar:[],
                            bodyStyle:'background-color:#fbfbfb',
                            autoLoad: 'inventory!searchWin.bc'
                        });
                    }
                    Ext.invSearchWindow.show();                    
                    
                }
            },
           {
                text: 'Inventory Multi Isbn Search',
                id: 'inventoryMultiSearchMenuItem',
                icon: '/images/zoom.png',
                handler: function(){
                    mainInvMenu.hide();
                    interPageMove('/secure/bellwether/inventory!multiSearch.bc');
                }
            }
        ]
    });
    tb.add({
        text:'Inventory',
        <s:if test="#activeMenu == 'inventory'">cls: 'activeMenu',</s:if>
        menu: mainInvMenu
    });
    </s:if>
    <s:if test="isBellOrderAdmin || isBellOrderViewer">
    tb.addSeparator();
    var mainOrderMenu = new Ext.menu.Menu({
        id: 'mainOrderMenu',
        items: [
            {
                text: 'Order List',
                id: 'orderListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainOrderMenu.hide();
                    interPageMove('/secure/bellwether/order!list.bc');
                }
            },
            {
                text: 'Amazon Orders',
                id: 'orderListMenuItemAmazon',
                icon: '/images/table.png',
                handler: function(){
                    mainInvMenu.hide();
                    var str = "{filters:[{val:'Amazon',col:'category',type:'string'}]}";
                    interPageMove("/secure/bellwether/order!list.bc?defaultFilters="+escape(str));
                }
            },
            {
                text: 'Internal Orders',
                id: 'orderListMenuItemInternal',
                icon: '/images/table.png',
                handler: function(){
                    mainInvMenu.hide();
                    var str = "{filters:[{val:'Internal',col:'category',type:'string'}]}";
                    interPageMove("/secure/bellwether/order!list.bc?defaultFilters="+escape(str));
                }
            },
            {
                text: 'Order Search',
                id: 'orderSearchMenuItem',
                icon: '/images/zoom.png',
                handler: function(){                    
                    Ext.Updater.defaults.loadScripts = true;
                        if (Ext.getCmp("ordersearchwindow") == undefined){
                            Ext.orderSearchWindow = new Ext.Window({
                                id: 'ordersearchwindow',
                                title: 'Order Search',
                                width:650,
                                height:200,
                                minWidth:650,
                                minHeight:200,
                                modal:false,
                                stateful:false,
                                autoScroll:true,
                                bbar:[],
                                bodyStyle:'background-color:#fbfbfb',
                                autoLoad: 'order!searchWin.bc'
                            });
                        }
                        Ext.orderSearchWindow.show();                    
                }
            }
            <s:if test="isBcOrderAdmin">
            ,'-',
            {
                text: 'Create New Internal Order',
                id: 'orderCreateMenuItem',
                icon: '/images/accept.png',
                handler: createOrderButtonClick
            }
            </s:if>
            
        ]
    });
    tb.add({
        <s:if test="#activeMenu == 'orders'">cls: 'activeMenu',</s:if>
        text: 'Orders',
        menu: mainOrderMenu
    });
    </s:if>
    <s:if test="isBellReceivingAdmin || isBellReceivingViewer">
    tb.addSeparator();
    var mainRecMenu = new Ext.menu.Menu({
        id: 'mainRecMenu',
        items: [
            {
                text: 'Receiving List',
                id: 'recListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainRecMenu.hide();
                    interPageMove('/secure/bellwether/receiving!list.bc');
                }
            },
            {
                text: 'Receiving Search',
                id: 'recSearchMenuItem',
                icon: '/images/zoom.png',
                handler: function(){
                    Ext.Updater.defaults.loadScripts = true;
                    if (Ext.getCmp("recsearchwindow") == undefined){
                        Ext.recSearchWindow = new Ext.Window({
                            id: 'recsearchwindow',
                            title: 'Receiving Search',
                            width:650,
                            height:200,
                            minWidth:650,
                            minHeight:200,
                            modal:false,
                            stateful:false,
                            autoScroll:true,
                            bbar:[],
                            bodyStyle:'background-color:#fbfbfb',
                            autoLoad: 'receiving!searchWin.bc'
                        });
                    }
                    Ext.recSearchWindow.show();                    
                    
                }
            },
            <s:if test="isBellReceivingAdmin">
            '-',
            {
                text: 'Create New Receiving',
                id: 'recCreateMenuItem',
                icon: '/images/accept.png',
                handler: createRecButtonClick
            },
            </s:if>
            '-',
            {text:'Filtered Receiving Lists', disabled:true},
            {
                text: 'Not Posted',
                id: 'unpostedRecListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainOrderMenu.hide();
                    interPageMove("/secure/bellwether/receiving!list.bc?defaultFilters=%7Bfilters%3A%5B%7Bval%3Afalse%2C%20col%3A'posted'%7D%5D%7D");
                }
            },
            {
                text: 'Posted',
                id: 'postedRecListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainOrderMenu.hide();
                    interPageMove("/secure/bellwether/receiving!list.bc?defaultFilters=%7Bfilters%3A%5B%7Bval%3Atrue%2C%20col%3A'posted'%7D%5D%7D");
                }
            }
        ]
    });
    tb.add({
        <s:if test="#activeMenu == 'receiving'">cls: 'activeMenu',</s:if>
        text: 'Receiving',
        menu: mainRecMenu
    });
    </s:if>
    <s:if test="isBcCustomerAdmin || isBcCustomerViewer">
    tb.addSeparator();
    var mainCustMenu = new Ext.menu.Menu({
        id: 'mainCustMenu',
        items: [
            {
                text: 'Customer List',
                id: 'custListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainCustMenu.hide();
                    interPageMove('/secure/bellwether/customer!list.bc');
                }
            }
        ]
    });
    tb.add({
        <s:if test="#activeMenu == 'customers'">cls: 'activeMenu',</s:if>
        text: 'Customers',
        menu: mainCustMenu
    });
    </s:if>
    <s:if test="isBcVendorAdmin || isBcVendorViewer">
    tb.addSeparator();
    var mainVendMenu = new Ext.menu.Menu({
        id: 'mainVendMenu',
        items: [
            {
                text: 'Vendor List',
                id: 'vendListMenuItem',
                icon: '/images/table.png',
                handler: function(){
                    mainVendMenu.hide();
                    interPageMove('/secure/bellwether/vendor!list.bc');
                }
            }
        ]
    });
    tb.add({
        <s:if test="#activeMenu == 'vendors'">cls: 'activeMenu',</s:if>
        text: 'Vendors',
        menu: mainVendMenu
    });
    </s:if>

    tb.addFill();
    tb.addSpacer();
    tb.addText("user: <% if (request.getUserPrincipal().getName().length() > 50){ %><%= request.getUserPrincipal().getName().substring(0, 50) %>... <% } else { %><%= request.getUserPrincipal().getName() %><% } %>");
    tb.addSpacer();
    tb.addSeparator();
    tb.addElement("logoutspan");
    tb.addSpacer();
    tb.addSeparator();
    tb.addSpacer();
    tb.addSpacer();
    });
    
    <!-- This is to fix the icon offset in menu drop downs in IE6 -->    
    if (Ext.isIE6){
        if (document.styleSheets[document.styleSheets.length-1].rules) {
            document.styleSheets[document.styleSheets.length-1].addRule(".x-menu-item-icon", "background-position:center left;left:-25px;"); 
        }
    }
    
    <s:if test="search != null && search.names != null && search.names.length > 0">
    searchRowNum += <s:property value="search.names.length"/>;
    </s:if>
    
    var quicksearchbar = new Ext.Panel({
        layout: 'fit',
        contentEl: 'quicksearchmenudiv',
        border:false,
        bodyBorder:false
    });

    var headermenu = new Ext.Panel({
        layout:'fit',
        tbar: tb,
        items: [quicksearchbar]
    });
    